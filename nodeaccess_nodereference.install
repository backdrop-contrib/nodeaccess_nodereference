<?php

/**
 * @file
 * The Node access node reference install file.
 */

/**
 * Implements hook_uninstall().
 */
function nodeaccess_nodereference_uninstall() {
  // Remove variables.
  variable_del('nodeaccess_nodereference');
  variable_del('nodeaccess_nodereference_cache_needs_clear');

  // Old variables.
  variable_del('nodeaccess_nodereference_priority');
  variable_del('nodeaccess_nodereference_author_view');
  variable_del('nodeaccess_nodereference_author_update');
  variable_del('nodeaccess_nodereference_author_delete');
}

/**
 * Implements hook_update_N().
 *
 * Unset author grants for updated installations.
 *
 * @see hook_update_N()
 */
function nodeaccess_nodereference_update_6300() {
  // Set author grants to 0, unless already set.
  $view = variable_get('nodeaccess_nodereference_author_view', 0);
  $update = variable_get('nodeaccess_nodereference_author_update', 0);
  $delete = variable_get('nodeaccess_nodereference_author_delete', 0);
  variable_set('nodeaccess_nodereference_author_view', $view);
  variable_set('nodeaccess_nodereference_author_update', $update);
  variable_set('nodeaccess_nodereference_author_delete', $delete);
  drupal_set_message(
    t(
      'Node access node reference settings have changed.  Please check your Node reference field settings.'
    ),
    'warning'
  );
  $ret[] = array(
    'success' => TRUE,
    'query' => 'Updating author grants.',
  );
  return $ret;
}

/**
 * Implements hook_update_N().
 *
 * Update settings storage.
 *
 * @see hook_update_N()
 */
function nodeaccess_nodereference_update_6301() {
  // Get all old settings and move them over to the new storage.
  $data = array();
  $result = db_query("SELECT * FROM {variable} WHERE name LIKE :naur", array(':naur' => 'nodeaccess_nodereference_%'));
  foreach ($result as $row) {
    $name = str_replace('nodeaccess_nodereference_', '', $row->name);
    $type_field = explode('_', $name);
    $type = $type_field[0];
    $field = $type_field[1];
    $old_data = unserialize($row->data);
    variable_del($row->name);
    nodeaccess_nodereference_field_settings($type, $field, $old_data);
  }

  // Move settings over and set passive defaults for upgraders.
  $author_view = variable_get('nodeaccess_nodereference_author_view', 0);
  $author_update = variable_get('nodeaccess_nodereference_author_update', 0);
  $author_delete = variable_get('nodeaccess_nodereference_author_delete', 0);
  $priority = variable_get('nodeaccess_nodereference_priority', 0);
  $data = variable_get('nodeaccess_nodereference', NULL);
  foreach ($data as $type => $type_data) {
    foreach ($type_data as $field => $field_data) {
      if ($author_view) {
        $data[$type][$field]['author']['view'] = 'view';
      }
      if ($author_update) {
        $data[$type][$field]['author']['update'] = 'update';
      }
      if ($author_delete) {
        $data[$type][$field]['author']['delete'] = 'delete';
     }
      $data[$type][$field]['priority'] = $priority;
      $view = $data[$type][$field]['view'];
      $update = $data[$type][$field]['update'];
      $delete = $data[$type][$field]['delete'];
      unset($data[$type][$field]['view']);
      unset($data[$type][$field]['update']);
      unset($data[$type][$field]['delete']);
      if ($view) {
        $data[$type][$field]['referenced']['view'] = 'view';
      }
      if ($update) {
        $data[$type][$field]['referenced']['update'] = 'update';
      }
      if ($delete) {
        $data[$type][$field]['referenced']['delete'] = 'delete';
      }
      $data[$type][$field]['all'] = array();
    }
  }
  variable_set('nodeaccess_nodereference', $data);
  variable_del('nodeaccess_nodereference_author_view');
  variable_del('nodeaccess_nodereference_author_update');
  variable_del('nodeaccess_nodereference_author_delete');
  variable_del('nodeaccess_nodereference_priority');

  $ret[] = array(
    'success' => TRUE,
    'query' => 'Updating settings storage.',
  );
  return $ret;
}

